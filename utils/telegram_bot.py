import os
import logging
import requests
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_BOT_TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN')
TELEGRAM_CHAT_ID = os.environ.get('TELEGRAM_CHAT_ID')

logger = logging.getLogger(__name__)

def send_contact_form_notification(form_data):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π —Ñ–æ—Ä–º–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –≤ Telegram
    
    Args:
        form_data (dict): –î–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã (–∏–º—è, email, —Ç–µ–ª–µ—Ñ–æ–Ω –∏ —Ç.–¥.)
    """
    if not TELEGRAM_BOT_TOKEN or not TELEGRAM_CHAT_ID:
        logger.warning("–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID")
        return False
        
    try:
        message = f"üì® *–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞*\n\n"
        message += f"üë§ *–ò–º—è*: {form_data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        message += f"üìß *Email*: {form_data.get('email', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        
        if form_data.get('phone'):
            message += f"üì± *–¢–µ–ª–µ—Ñ–æ–Ω*: {form_data.get('phone')}\n"
            
        if form_data.get('subject'):
            message += f"üìù *–¢–µ–º–∞*: {form_data.get('subject')}\n"
            
        message += f"\nüí¨ *–°–æ–æ–±—â–µ–Ω–∏–µ*:\n{form_data.get('message', '–ü—É—Å—Ç–æ')}"
        
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
        data = {
            "chat_id": TELEGRAM_CHAT_ID,
            "text": message,
            "parse_mode": "Markdown"
        }
        
        response = requests.post(url, data=data)
        response.raise_for_status()
        
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram: {str(e)}")
        return False

def send_files_to_telegram(file_paths, caption=""):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª—ã –≤ Telegram
    
    Args:
        file_paths (list): –°–ø–∏—Å–æ–∫ –ø—É—Ç–µ–π –∫ —Ñ–∞–π–ª–∞–º –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        caption (str): –ü–æ–¥–ø–∏—Å—å –∫ —Ñ–∞–π–ª–∞–º
    """
    if not TELEGRAM_BOT_TOKEN or not TELEGRAM_CHAT_ID:
        logger.warning("–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID")
        return False
        
    if not file_paths:
        return True
        
    try:
        for file_path in file_paths:
            if not os.path.exists(file_path):
                logger.warning(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
                continue
                
            url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendDocument"
            
            with open(file_path, 'rb') as file:
                files = {'document': file}
                data = {
                    "chat_id": TELEGRAM_CHAT_ID,
                    "caption": caption
                }
                
                response = requests.post(url, data=data, files=files)
                response.raise_for_status()
                
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–æ–≤ –≤ Telegram: {str(e)}")
        return False 